#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

[build-system]
requires = ["hatchling", "hatch-fancy-pypi-readme"]
build-backend = "hatchling.build"

[project]
name = "apache-dubbo"
requires-python = ">=3.9"
dynamic = ["version", "readme"]
authors = [{ name = "Apache Dubbo Community", email = "dev@dubbo.apache.org" }]
maintainers = [{ name = "Apache Dubbo Community", email = "dev@dubbo.apache.org" }]
description = "Python Implementation For Apache Dubbo."
license = "Apache-2.0"
license-files = ["LICENSE", "NOTICE"]
keywords = [
    "dubbo", "dubbo-python", "apache-dubbo",
    "rpc", "grpc", "http", "http2",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Framework :: AnyIO",
    "Framework :: AsyncIO",
    "Framework :: Trio",
    "Topic :: Internet",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Networking",
    "Typing :: Typed"
]

dependencies = [
    "anyio>=4.9.0",
    "h2>=4.1.0",
    "psutil>=6.0.0",
]


[project.urls]
Homepage = "https://cn.dubbo.apache.org"
Documentation = "https://cn.dubbo.apache.org/en/overview/mannual/python-sdk/"
Repository = "https://github.com/apache/dubbo-python"
Issues = "https://github.com/apache/dubbo/issues"

[project.optional-dependencies]
zookeeper = [
    "kazoo>=2.10.0",
]
logging-color = [
    "colorlog>=6.9.0",
]
loguru = [
    "loguru>=0.7.3",
]


[dependency-groups]
build = [
    "hatch>=1.14.1",
    "hatch-fancy-pypi-readme>=25.1.0",
]
dev = [
    "pre-commit>=4.2.0",
    "ruff>=0.11.10",
    "mypy>=1.15.0",
    "pytest>=8.3.5",
    "pytest-cov>=6.1.1",
]



# ------------- Hatch settings -------------
[tool.hatch.version]
path = "src/dubbo/__about__.py"

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/README.md",
    "/LICENSE",
    "/NOTICE",
]

[tool.hatch.build.targets.wheel]
packages = ["src/dubbo"]


[tool.hatch.metadata.hooks.fancy-pypi-readme]
content-type = "text/markdown"
[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
path = "README.md"



# ------------- Ruff settings -------------
# Top-level
[tool.ruff]
target-version = "py39"
line-length = 120
extend-exclude = ["**/*_pb2.py"]

# Format
[tool.ruff.format]
docstring-code-format = true

# Lint
[tool.ruff.lint]
select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "I", # Check for missing imports (auto-fixable)
    "UP", # pyupgrade
    "ASYNC", # flake8-async
    "ISC", # Checks for implicit literal string concatenation (auto-fixable)
    "LOG", # Checking the use of logging objects
    "G", # Check for logging format issues (auto-fixable)
]

ignore = [
    "ISC001", # may casue conflict with ruff
]


[tool.ruff.lint.isort]
combine-as-imports = true

section-order = [
    "future",
    "standard-library",
    "third-party",
    "first-party",
    "local-folder"
]


# ------------- Mypy settings -------------
[tool.mypy]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
check_untyped_defs = true


# ------------- Pytest settings ------------
[tool.pytest.ini_options]
addopts = "-rxXs --cov=src/dubbo --cov-report=term-missing"
testpaths = ["tests"]
python_files = ["test_*.py"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "e2e: End-to-end tests",
    "slow: Slow tests",
    "fast: Fast tests",
]


# ---------------- Coverage Settings ----------------
[tool.coverage.report]
# Skip files with 100% coverage
skip_covered = true
exclude_lines = [
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "@(abc\\.)?abstractmethod",
    "@(typing(_extensions)?\\.)?overload",
    "if (typing(_extensions)?\\.)?TYPE_CHECKING:"
]
